// <auto-generated />
using System;
using Finra.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Finra.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220125085513_upd")]
    partial class upd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Finra.Core.Models.ActiveType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ActiveTypes");
                });

            modelBuilder.Entity("Finra.Core.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("ActiveTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("CurrencyTypeid")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("ExchangeId")
                        .HasColumnType("integer");

                    b.Property<string>("Isin")
                        .HasColumnType("text");

                    b.Property<int>("IssuingCompanyId")
                        .HasColumnType("integer");

                    b.Property<int>("LotSize")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Ticket")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ActiveTypeId");

                    b.HasIndex("CurrencyTypeid");

                    b.HasIndex("ExchangeId");

                    b.HasIndex("IssuingCompanyId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("Finra.Core.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Finra.Core.Models.CurrencyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CurrencyTypes");
                });

            modelBuilder.Entity("Finra.Core.Models.Exchange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Exchanges");
                });

            modelBuilder.Entity("Finra.Core.Models.Industry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Industries");
                });

            modelBuilder.Entity("Finra.Core.Models.IssuingCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Countryid")
                        .HasColumnType("integer");

                    b.Property<int>("IndustryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Countryid");

                    b.HasIndex("IndustryId");

                    b.ToTable("IssuingCompanies");
                });

            modelBuilder.Entity("Finra.Core.Models.Asset", b =>
                {
                    b.HasOne("Finra.Core.Models.ActiveType", "ActiveType")
                        .WithMany("Assets")
                        .HasForeignKey("ActiveTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finra.Core.Models.CurrencyType", "CurrencyType")
                        .WithMany("Assets")
                        .HasForeignKey("CurrencyTypeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finra.Core.Models.Exchange", "Exchange")
                        .WithMany("Assets")
                        .HasForeignKey("ExchangeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finra.Core.Models.IssuingCompany", "IssuingCompany")
                        .WithMany("Assets")
                        .HasForeignKey("IssuingCompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveType");

                    b.Navigation("CurrencyType");

                    b.Navigation("Exchange");

                    b.Navigation("IssuingCompany");
                });

            modelBuilder.Entity("Finra.Core.Models.IssuingCompany", b =>
                {
                    b.HasOne("Finra.Core.Models.Country", "Country")
                        .WithMany("IssuingCompanies")
                        .HasForeignKey("Countryid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finra.Core.Models.Industry", "Industry")
                        .WithMany("IssuingCompanies")
                        .HasForeignKey("IndustryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");

                    b.Navigation("Industry");
                });

            modelBuilder.Entity("Finra.Core.Models.ActiveType", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("Finra.Core.Models.Country", b =>
                {
                    b.Navigation("IssuingCompanies");
                });

            modelBuilder.Entity("Finra.Core.Models.CurrencyType", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("Finra.Core.Models.Exchange", b =>
                {
                    b.Navigation("Assets");
                });

            modelBuilder.Entity("Finra.Core.Models.Industry", b =>
                {
                    b.Navigation("IssuingCompanies");
                });

            modelBuilder.Entity("Finra.Core.Models.IssuingCompany", b =>
                {
                    b.Navigation("Assets");
                });
#pragma warning restore 612, 618
        }
    }
}
